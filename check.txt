確認済みのことやコードメモ

全員分の全データは7494データ（姿勢0も被験者回カウントしている）


pic_up_data.py
・bed_data の各被験者，姿勢，タグに対する time と rssi のデータは正しいことを確認
　（furushima 1 "E280116060000204AC6AD1FE" でデータを出力後，0,1 秒の時の bed_data の値を csv ファイルのデータと目で照らし合わせた．）


average_data.py
・avg_bed_data はすべての被験者，すべての姿勢，すべてのタグ毎のデータ数が一致している

・平均のrssi値取得なし-105.0の時を除いて
    最大：-59.53076923076923   
    最小：-75.17777777777776

tag が存在しない場合：
・avg_bed_dataにno_data_rssiの値がmaxの個数入っていることを確認->一応データ数を目でも確認OK
・tag_count_dataの値:すべて0->OK

tagが存在する場合：
・avg_bed_data["furushima"]["1"]["E280116060000204AC6AD1FD"]で確認->一応データ数を目でも確認し大丈夫だった
・0,1秒のときの平均を確認->電卓でも計算しOK
・0,1秒のときの tag_count_dataの値もOK（bed_dataのその秒数のデータ数を目で数えて確認）

・avg_bed_data["furushima"]["1"]["E280116060000204AC6AD0E6"]
・データ取得数が0の場合の平均値確認->no_data_rssi入っている

standardized_data.py
・標準化

list=[1,2,3,4,5,6,7,8,9,10]で以下を試す

# StandardScaler クラスを使用して、データを標準化する
sc = preprocessing.StandardScaler()
sc.fit(np_list)
standardized_list = sc.transform(np_list)
list_v = list(standardized_list.reshape(-1))

ー＞ちゃんと標準化されていることを確認
ー＞standardized_data[tester][posture][tag]の内容もちゃんと標準化されていると考えられる


・標準化したrssi値取得なし-105.0の時を除いて
    最大：4.389222267604575
    最小：-2.939278130557916
    （-105.0の時を含めると最小：-16.528859548080682）



plot_posture.py

posture0ファイルの画像がすべて同じ色なのは，姿勢0のデータが全員同じデータだから
（最後がmiyataさんだからmiyataさんの色でplotされてるデータのようになる）



posture_bed_data.csv
testerはtester_name.txtの順にtester0~10
